{
//WARNING!! Do NOT make edits to any file in this mod unless you know what you're doing, you can easily break things by accidentally deleting a symbol. I am not responsible for breaks caused by editing and I don't provide coding instruction. There is a Wiki for that.

//IF YOU CHOOSE TO EDIT THE DIALOGUE - You may edit your personal copy only. You do not have permission to make edits and re-post or share this mod. The dialogue is my own writing and I worked very hard on this. Contact MaggPlays directly if you have any questions or if you think your edits should be a variant.

    "Format": "2.4.0",
	"ConfigSchema": {
		"SpiceLevel": {
			"AllowValues": "sweet, spicy, extraspicy",
			"Default": "sweet",
			"Description": "SWEET is all romance and no swearing. SPICY includes innuendo and mild swearing. EXTRA SPICY adds some additional sexual content to Spicy. All content is positive, romantic, and light, NO violent/dark or crass content.",
			"Section": "DialogueType",
            },
		"FarmerTense": {
			"AllowValues": "first, third",
			"Default": "first",
			"Description": "First person gives a more immersive experience, pulling you into the story as the farmer. Second/third person is more objective and allows you to imagine your own scenarios.",
			"Section": "DialogueType",
			},
		"FarmerPronouns": {
			"AllowValues": "yes, no",
			"Default": "no",
			"Description": "Select 'Yes' to use gender neutral pronouns for farmer.",
			"Section": "DialogueType",
			},
		"SebSpectrum": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Sebastian's vanilla character demonstrates hints of mild autism. Select 'Yes' to enable dialogue developing this character aspect at a high level.",
			"Section": "DialogueType",
			},
		"Endearment": {
			"AllowValues": "Snugglebug, Love, Sweetheart, Sweetie, Darling, Honey, Hun, Baby, Babe, Dear, Princess, Prince, Angel, Cutie, Beautiful, Gorgeous, Handsome",
			"Default": "Snugglebug",
			"Description": "Select the pet name Seb should call you after dating.",
			"Section": "DialogueType",
            },
		"Smoking": {
			"AllowValues": "quitsmoking, keepsmoking, nonsmoking",
			"Default": "quitsmoking",
			"Description": "'Quit Smoking' follows the standard storyline. Select Keep Smoking to remove 'quitting smoking' dialogue from this mod. Select Non-smoking if you're running Magg's Non-Smoking Sebastian (or a simiar mod) and you want no references to smoking at all.",
			"Section": "DialogueType",
            },
        "KidsVariant": {
			"AllowValues": "yes, no",
			"Default": "no",
			"Description": "Select 'Yes' to remove some minor dialogue and event references to future children.",
			"Section": "DialogueType",
            },
        "SamDialogue": {
			"AllowValues": "true, false",
			"Default": "true",
			"Description": "Uncheck to remove Sam's friendship dialogue (not recommended).",
			"Section": "DialogueType",
            },
        "AbigailDialogue": {
			"AllowValues": "true, false",
			"Default": "true",
			"Description": "Uncheck to remove Abigail's friendship dialogue (not recommended).",
			"Section": "DialogueType",
            },
		"AlexDialogue": {
			"AllowValues": "true, false",
			"Default": "true",
			"Description": "Uncheck to remove Alex's friendship dialogue (not recommended).",
			"Section": "DialogueType",
            },
        "MaruDialogue": {
			"AllowValues": "true, false",
			"Default": "true",
			"Description": "Uncheck to remove Maru's friendship dialogue (not recommended).",
			"Section": "DialogueType",
            },
        "SleepoverRepeat": {
			"AllowValues": "friday, threedays, daily, none",
			"Default": "threedays",
			"Description": "Choose whether Sebastain sleeps over at the farmhouse while dating after seeing Levitate (Extra Spicy only), enables a mini event conversation in the evening and the following morning with randomized dialogue. Recommended to set to None (Off) if using Polyamory Sweet or a similar polygamy mod and farmer is already married to avoid immersion issues.",
			"Section": "EventOptions",
			},
		"PillowtalkRepeat": {
			"AllowValues": "friday, threedays, daily, none",
			"Default": "threedays",
			"Description": "Choose whether Sebastian talks to you at night after marriage (Extra Spicy only), enables a mini event conversation in the evening with randomized dialogue. Recommended to set to None (Off) if using Polyamory Sweet or a similar polygamy mod to avoid immersion issues and possible dialogue conflicts.",
			"Section": "EventOptions",
			},
		"MorningRepeat": {
			"AllowValues": "saturday, threedays, daily, none",
			"Default": "daily",
			"Description": "Choose whether Sebastain chats with farmer in the mornings after marriage, enables a mini event conversation in the morning with randomized dialogue. Recommended to set to None (Off) if using Polyamory Sweet or a similar polygamy mod to avoid immersion issues and possible dialogue conflicts.",
			"Section": "EventOptions",
			},
		"EndDayOption": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Sleepover, Pillowtalk, and Levitate events end the day. Choose 'No' to keep any event from ending the day.",
			"Section": "EventOptions",
			},
		"NightMap": {
			"AllowValues": "none, bed, dream, nightsky",
			"Default": "none",
			"Description": "If you want a background other than the farmhouse kitchen or are using a custom farmhouse mod that changes the kitchen map location, choose a background for the Sleepover and Pillowtalk events (Extra Spicy only).",
			"Section": "EventOptions",
			},
		"MorningMap": {
			"AllowValues": "none, bed, dream, nightsky",
			"Default": "none",
			"Description": "If you want a background other than the farmhouse kitchen or are using a custom farmhouse mod that changes the kitchen map location, choose a background for the Good Morning event.",
			"Section": "EventOptions",
			},
		"DateRepeat": {
			"AllowValues": "monthly, annually, once",
			"Default": "monthly",
			"Description": "Select how often marriage dates reset, the dates can be randomly repeated every month, once per year, or once with no repeats. Monthly includes 4 dates per month, with one unique date per month. All dates have at least two choices that change the dialogue or ending.",
			"Section": "EventOptions",
			},
		"BirthSeason": {
			"AllowValues": "spring, summer, fall, winter",
			"Default": "spring",
			"Description": "Select the season for your farmer's birthday, this is used for custom events. Avoid festival days, and if you are using the Happy Birthday mod, select the same day.",
			"Section": "EventOptions",
			},
		"BirthDay": {
			"AllowValues": "1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28",
			"Default": "1",
			"Description": "Select the day for your farmer's birthday, this is used for custom events. Avoid festival days, and if you are using the Happy Birthday mod, select the same day.",
			"Section": "EventOptions",
			},
		"BabySprite": {
			"AllowValues": "light, dark",
			"Default": "light",
			"Description": "Select the baby sprite color you'd like for the birth event, the event can't automatically select this option.",
			"Section": "EventOptions",
			},
		"RepeatableEvents": {
			"AllowValues": "yes, no",
			"Default": "no",
			"Description": "Allows non-story specific cutscenes to repeat annually (armwrestling, mountain music, hangout, dancing)",
			"Section": "EventOptions",
			},
		"SebCustomSprites": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Enables custom Sebastian sprites for certain events. Selecting 'No' removes custom sprites in some events and disables non-essential events that require custom sprites. See Nexus mod description for details. If you are using Seasonal Outfits mod, download the compatible patch. No changes needed for Maggs Emo Sebastian sprites mod.",
			"Section": "CustomSprites",
			},
		"FlowerSuit": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Replaces the Flower Dance men's suits for a specific sory arc. Only works on vanilla or non-seasonal sprite mods. Select 'No' if you have a different sprite mod installed. You will see the dialogue but the sprites will not change.",
			"Section": "CustomSprites",
			},
		"SebWeddingSuit": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Select 'Yes' to enable Sebastian's wedding suit sprite. Also allows Seb to wear his wedding suit for the day. Only works on vanilla or non-seasonal sprite mods. Select 'No' if you have a different sprite mod installed.",
			"Section": "CustomSprites",
			},
		"WeddingDecor": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Select 'Yes' to enable Magg's custom wedding decor, the decorations stay up a couple of days after the wedding. Select 'No' if you have an alternate decor mod installed.",
			"Section": "CustomSprites",
			},
		"SebDecor": {
			"AllowValues": "yes, no",
			"Default": "no",
			"Description": "Select 'Yes' to keep the wedding decorations up after the wedding. They will disappear if you toggle this to 'No'.",
			"Section": "CustomSprites",
			},
		"BabySpriteEdit": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Enables a minor edit to the baby sprite, recoloring the blanket to a mint green and making the infant slightly smaller.",
			"Section": "CustomSprites",
			},
		"BluFroggies": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Select 'Yes' to keep the frog aquarium in Seb's room after the relevant event (this is not the same aquarium as his 14 heart event).",
			"Section": "OtherOptions",
			},
		"SpouseRoomEdit": {
			"AllowValues": "yes, no",
			"Default": "yes",
			"Description": "Make edits to Seb's spouse room, such as adding the frogs and slippers. Select 'No' if you're using a different spouse room mod and the edits conflict.",
			"Section": "OtherOptions",
			},
		"AdoptChild": {
			"AllowValues": "yes, no",
			"Default": "no",
			"Description": "Select Yes to enable adoption events, natural birth events are default. This selection allows compatibity with mods that give adoption options to hetero couples.",
			"Section": "OtherOptions",
			}
		},
"DynamicTokens": [
//DIALOGUE tokens
{
	"Name": "FarmerGender",
	"Value": "female",
	"When": {
		"PlayerGender": "female",
		"FarmerPronouns": "no",
		}
	},
{
	"Name": "FarmerGender",
	"Value": "male",
	"When": {
		"PlayerGender": "male",
		"FarmerPronouns": "no",
		}
	},
{
	"Name": "FarmerGender",
	"Value": "neu",
	"When": {
		"FarmerPronouns": "yes",
		}
	},
{
	"Name": "SebAutism",
	"Value": "typical",
	},
{
	"Name": "SebAutism",
	"Value": "autism",
	"When": {
		"SebSpectrum": "yes"
        }
    },
{
	"Name": "Adoption",
	"Value": "birth",
	},
{
	"Name": "Adoption",
	"Value": "adopt",
	"When": {
		"AdoptChild": "yes"
        }
    },
	//Relationship Tokens
{
	"Name": "SebRelationship",
	"Value": "single",
	"When": {
		"Relationship:Sebastian |contains=Dating, Married": false,
   		}
	},
{
	"Name": "SebRelationship",
	"Value": "dating",
	"When": {
		"Relationship:Sebastian |contains=Dating, Married": true,
   		}
	},
{
	"Name": "SebHearts",
	"Value": "lowhearts",
	"When": {
		"Hearts:Sebastian": "0, 1, 2"
		}
	},
{
	"Name": "SebHearts",
	"Value": "medhearts",
	"When": {
		"Hearts:Sebastian": "3, 4, 5"
		}
	},
{
	"Name": "SebHearts",
	"Value": "highhearts",
	"When": {
		"Hearts:Sebastian": "6, 7, 8, 9, 10"
		}
	},
{
	"Name": "SebHearts",
	"Value": "dating",
	"When": {
		"Relationship:Sebastian |contains=Dating, Engaged, Married": true,
		}
	},
{
	"Name": "SamHearts",
	"Value": "lowhearts",
	"When": {
		"Hearts:Sam": "0, 1, 2"
		}
	},
{
	"Name": "SamHearts",
	"Value": "medhearts",
	"When": {
		"Hearts:Sam": "3, 4, 5"
		}
	},
{
	"Name": "SamHearts",
	"Value": "highhearts",
	"When": {
		"Hearts:Sam": "6, 7, 8, 9, 10"
		}
	},
{
	"Name": "FarmerBDay",
	"Value": false,
	},
{
	"Name": "FarmerBDay",
	"Value": true,
	"When": {
		"Season": "{{BirthSeason}}",
		"Day": "{{BirthDay}}",
		"Relationship:Sebastian": "Dating, Engaged, Married"
		}
	},
{
	"Name": "SebAnniversary",
	"Value": false,
	},
{
	"Name": "SebAnniversary",
	"Value": true,
	"When": {
		"Day": "{{TheMightyAmondee.CustomTokens/AnniversaryDay}}",
		"Season": "{{TheMightyAmondee.CustomTokens/AnniversarySeason}}",
		"Spouse": "Sebastian"
		}
	},
	//Marriage Dialogue Tokens
{
	"Name": "MarriageYear",
	"Value": "ongoing",
	},
{
	"Name": "MarriageYear",
	"Value": "year1",
	"When": {
		"TheMightyAmondee.CustomTokens/YearsMarried": "0"
		}
	},
{
	"Name": "MarriageYear",
	"Value": "year2",
	"When": {
		"TheMightyAmondee.CustomTokens/YearsMarried": "1"
		}
	},
{
	"Name": "MarriageYear",
	"Value": "year3",
	"When": {
		"TheMightyAmondee.CustomTokens/YearsMarried": "2"
		}
	},
{
	"Name": "Solstice",
	"Value": "star",
	},
{
	"Name": "Solstice",
	"Value": "solstice",
	"When": {
		"HasMod |contains=Airyn.CPSolsticeWinterStar": true,
		},
	},
//Disable other events during Error Code arc
	//might be a better way to do this not sure its working
{
	"Name": "ErrorCodeStatus",
	"Value": "allgood",
	"When": {
		"Query: '{{HasSeenEvent |contains=MaggErrorCode006282024}}' = 'false' OR '{{HasSeenEvent |contains=MaggErrorCode406282024}}' = 'true'": true,
		}
	},
{
	"Name": "ErrorCodeStatus",
	"Value": "timeout",
	"When": {
		"Query: '{{HasSeenEvent |contains=MaggErrorCode006282024}}' = 'true' AND '{{HasSeenEvent |contains=MaggErrorCode406282024}}' = 'false'": true,
		}
	},
//Disable other events during Frogs of Blue arc
{
	"Name": "BlueFrogsStatus",
	"Value": "frogssolved",
	"When": {
		"Query: '{{HasSeenEvent |contains=maggfrogsofblue10162024}}' = 'false' OR '{{HasSeenEvent |contains=maggfrogsofblue610162024}}' = 'true'": true,
		}
	},
{
	"Name": "BlueFrogsStatus",
	"Value": "frogsmystery",
	"When": {
		"Query: '{{HasSeenEvent |contains=maggfrogsofblue10162024}}' = 'true' AND '{{HasSeenEvent |contains=maggfrogsofblue610162024}}' = 'false'": true,
		}
	},
//SOLSTICE WINTER STAR COMPATIBILITY
{
	"Name": "Solstice",
	"Value": "star",
	},
{
	"Name": "Solstice",
	"Value": "solstice",
	"When": {
		"HasMod |contains=Airyn.CPSolsticeWinterStar": true,
		},
	},
//SVE COMPATIBILITY
{
	"Name": "SVE",
	"Value": "vanilla",
	},
{
	"Name": "SVE",
	"Value": "SVE",
	"When": {
		"HasMod |contains=FlashShifter.StardewValleyExpandedCP": true,
		},
	},
{
	"Name": "Vanilla6Places",
	"Value": "farmer 1 1 2 Sebastian 5 9 3 Sam 3 7 2",
	},
{
	"Name": "Vanilla6Places",
	"Value": "farmer 1 1 2 Sebastian 5 8 3 Sam 3 7 2",
	"When": {
		"HasMod |contains=FlashShifter.StardewValleyExpandedCP": true,
		}
	},
{
	"Name": "NewPlayerPlaces",
	"Value": "Sam 1 1 2 Sebastian 5 9 3 Abigail 3 7 2 farmer -100 -100 0",
	},
{
	"Name": "NewPlayerPlaces",
	"Value": "Sam 1 1 2 Sebastian 5 8 3 Abigail 3 7 2 farmer -100 -100 0",
	"When": {
		"HasMod |contains=FlashShifter.StardewValleyExpandedCP": true,
		}
	},
//Pre-Marriage Event Tokens
{
	"Name": "SmokingAnimation10Heart",
	"Value": "animate Sebastian false true 110 16 17 18 19 20 21 21 21 21 21 21 21 21 22 23 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16/pause 1000/faceDirection farmer 1/pause 1800/faceDirection farmer 0/pause 1800/speak Sebastian \"$q -1 null#{{i18n: seb.event.vanilla10.4}}#$r -1 0 event_city1#{{i18n: seb.event.vanilla10.5}}#$r -1 10 event_city2#{{i18n: seb.event.vanilla10.6}}#$r -1 -10 event_city3#{{i18n: seb.event.vanilla10.7}}#$r -1 0 event_city4#{{i18n: seb.event.vanilla10.8}}\"/stopAnimation Sebastian",
	},
{
	"Name": "SmokingAnimation10Heart",
	"Value": "emote Sebastian 40/pause 1000/faceDirection farmer 1/pause 1800/faceDirection farmer 0/faceDirection Sebastian 0/speak Sebastian \"$q -1 null#{{i18n: seb.event.vanilla10.4}}#$r -1 0 event_city1#{{i18n: seb.event.vanilla10.5}}#$r -1 10 event_city2#{{i18n: seb.event.vanilla10.6}}#$r -1 -10 event_city3#{{i18n: seb.event.vanilla10.7}}#$r -1 0 event_city4#{{i18n: seb.event.vanilla10.8}}\"",
	"When": {
		"Smoking": "nonsmoking"
		}
	},
{
	"Name": "SteamConditions",
	"Value": "f Sebastian 2250/e MaggDream07302024/t 1700 2300",
	"When": {
		"SpiceLevel": "spicy, sweet"
		}
	},
{
	"Name": "SteamConditions",
	"Value": "f Sebastian 2250/e MaggLevitate07242024/t 1700 2300",
	"When": {
		"SpiceLevel": "extraspicy"
		}
	},
{
	"Name": "DanceSequence",
	"Value": "animate ShadowDance false true 225 0 2 3 2 3 4 3 4 5 6 7 6 5 6 7 8 9 10 11 12 13 14 15 16 15 14 13 12 11 17 18 19 20 21 22 6 7 8 9 10 11 12 13 14 15 16 15 14 13 12 11 17 18 19 20 21 22 6 5 4 3 0 2 3 2 3 4 3 4 5 6 7 6 5 6 7 8 9 10 11 12 13 14 15 16 15 14 13 12 11 17 18 19 20 21 22 23 24 25 26 27 27 27 28 29 30 31 32 33 34 35 36 36 37 37 36 36 37 37 36 36 37 37 38 39 40 41 42 43 44",
	"When": {
		"PlayerGender": "female",
		}
	},
{
	"Name": "DanceSequence",
	"Value": "animate ShadowDance false true 225 0 2 3 2 3 4 3 4 5 6 7 6 5 6 7 8 8 9 10 9 10 9 11 12 13 14 15 16 15 14 13 12 11 17 18 19 20 21 22 6 7 7 8 8 9 10 9 10 9 11 12 13 14 15 16 15 14 13 12 11 17 18 19 20 21 22 6 5 4 3",
	"When": {
		"PlayerGender": "male",
		}
	},
//Custom Sprite tokens
{
	"Name": "FrogsBlueSprite",
	"Value": "/",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "FrogsBlueSprite",
	"Value": "/showFrame Sebastian 120/",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "SpawnDateSprites1",
	"Value": "pause 200",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "SpawnDateSprites1",
	"Value": "showFrame Sebastian 95/pause 200/showFrame farmer 68",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "SpawnDateSprites2",
	"Value": "pause 50",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "SpawnDateSprites2",
	"Value": "showFrame Sebastian 94",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "SpawnDateSprites3",
	"Value": "faceDirection Sebastian 3/faceDirection farmer 1",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "SpawnDateSprites3",
	"Value": "showFrame Sebastian 94/faceDirection farmer 2 true/showFrame farmer 68",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "SpawnDateSprites4",
	"Value": "faceDirection farmer 1/warp Sebastian 12 8/faceDirection Sebastian 3",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "SpawnDateSprites4",
	"Value": "faceDirection farmer 2/showFrame farmer 68/positionOffset farmer 0 -30/warp Sebastian 12 8/showFrame Sebastian 60/hideShadow Sebastian true",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "DebuggingSprite1",
	"Value": "faceDirection Sebastian 2",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "DebuggingSprite1",
	"Value": "showFrame Sebastian 75",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "DebuggingSprite2",
	"Value": "pause 50",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "DebuggingSprite2",
	"Value": "showFrame Sebastian 74",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "LevelUpSprite1",
	"Value": "warp Sebastian 6 6/faceDirection Sebastian 3",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "LevelUpSprite1",
	"Value": "warp Sebastian 6 6/showFrame Sebastian 76/animate Sebastian false true 200 76 77 78 79 79 78 77 76",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "LevelUpSprite2",
	"Value": "pause 100",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "LevelUpSprite2",
	"Value": "stopAnimation Sebastian/showFrame Sebastian 89",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "LevelUpSprite3",
	"Value": "showFrame Sebastian 40",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "LevelUpSprite3",
	"Value": "showFrame Sebastian 88",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "DebuggingSprite3",
	"Value": "faceDirection Sebastian 3",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "DebuggingSprite3",
	"Value": "showFrame Sebastian 73",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "DebuggingSprite4",
	"Value": "faceDirection Sebastian 3",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "DebuggingSprite4",
	"Value": "animate Sebastian true true 100 74",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "FollowYouSprite",
	"Value": "pause 300",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "FollowYouSprite",
	"Value": "animate Sebastian true true 100 100/pause 300",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "MaruChatSprite",
	"Value": "showFrame Sebastian 31/positionOffset Sebastian -5 5",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "MaruChatSprite",
	"Value": "showFrame Sebastian 123/positionOffset Sebastian -15 -10",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "NameSprite1",
	"Value": "faceDirection Sebastian 1",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "NameSprite1",
	"Value": "animate Sebastian true true 100 94",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "NameSprite2",
	"Value": "faceDirection Sebastian 2",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "NameSprite2",
	"Value": "stopAnimation Sebastian 95",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "NameSprite3",
	"Value": "pause 100",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "NameSprite3",
	"Value": "pause 100/stopAnimation Sebastian/advancedMove Sebastian false 1 0 3 100/pause 1000/showFrame Sebastian 123",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "MechanicSprite1",
	"Value": "showFrame Sebastian 31/positionOffset Sebastian -10 5",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "MechanicSprite1",
	"Value": "showFrame Sebastian 123/positionOffset Sebastian -30 -10",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "MechanicSprite2",
	"Value": "faceDirection farmer 1/warp Sebastian 15 30/showFrame Sebastian 0/faceDirection Sebastian 3",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "MechanicSprite2",
	"Value": "faceDirection farmer 2/showFrame farmer 70/eyes 4 -1000/warp Sebastian 15 30/showFrame Sebastian 60/hideShadow Sebastian true/positionOffset Sebastian -20 0",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "IslandFrogSprite1",
	"Value": "positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/warp FrogBlanket 96 9/message \"{{i18n: seb.date.islandfrogs.20}}\"/pause 1000/globalFade/viewport -1000 -1000 false/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.21}}\"/pause 200/message \"{{i18n: seb.date.islandfrogs.22}}\"/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.23}}\"/pause 300/message \"{{i18n: seb.date.islandfrogs.24}}\"/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.26.{{SpiceLevel}}}}\"/pause 300/message \"{{i18n: seb.date.islandfrogs.27.{{SpiceLevel}}}}\"/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.51.{{SpiceLevel}}}}\"/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.52}}\"/pause 300",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "IslandFrogSprite1",
	"Value": "showFrame Sebastian 95/faceDirection farmer 2 true/showFrame farmer 70/positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/warp FrogBlanket 96 9/message \"{{i18n: seb.date.islandfrogs.20}}\"/pause 1000/viewport -1000 -1000 false/changeToTemporaryMap MaggIslandFrogs2 false/warp FrogBlanket -100 -100/warp farmer 97 9/faceDirection farmer 2/showFrame farmer 70/positionOffset farmer -30 0/warp Sebastian 98 9/showFrame Sebastian 60/positionOffset Sebastian -30 0/hideShadow Sebastian true/viewport 97 9 true/pause 300/positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/positionOffset farmer 2 0/pause 100/positionOffset Sebastian -2 0/pause 100/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.21}}\"/pause 200/message \"{{i18n: seb.date.islandfrogs.22}}\"/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.23}}\"/pause 300/message \"{{i18n: seb.date.islandfrogs.24}}\"/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.26.{{SpiceLevel}}}}\"/pause 300/message \"{{i18n: seb.date.islandfrogs.27.{{SpiceLevel}}}}\"/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.51.{{SpiceLevel}}}}\"/emote farmer 20/emote Sebastian 20/pause 300/speak Sebastian \"{{i18n: seb.date.islandfrogs.52}}\"/pause 300/globalFade/viewport -1000 -1000 false",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "IslandFrogSprite2",
	"Value": "faceDirection Sebastian 3",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "IslandFrogSprite2",
	"Value": "showFrame Sebastian 94",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "CampoutSprite1",
	"Value": "faceDirection farmer 1/faceDirection Sebastian 3",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "CampoutSprite1",
	"Value": "showFrame Sebastian 95/faceDirection farmer 2/showFrame farmer 70/pause 1000/showFrame Sebastian 94",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "CampoutSprite2",
	"Value": "faceDirection farmer 2",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "CampoutSprite2",
	"Value": "showFrame Sebastian 95/faceDirection farmer 2/showFrame farmer 70",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "CampoutSprite3",
	"Value": "pause 100",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "CampoutSprite3",
	"Value": "faceDirection Sebastian 2/faceDirection farmer 2/showFrame Sebastian 95/showFrame farmer 70",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "CampoutSprite4",
	"Value": "faceDirection Sebastian 2",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "CampoutSprite4",
	"Value": "showFrame Sebastian 95/faceDirection farmer 2/showFrame farmer 70",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "CampoutSprite5",
	"Value": "faceDirection Sebastian 2",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "CampoutSprite5",
	"Value": "showFrame Sebastian 95",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "SnowgoonSprite",
	"Value": "faceDirection Sebastian 3/faceDirection farmer 1",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "SnowgoonSprite",
	"Value": "showFrame Sebastian 94/showFrame farmer 70/pause 500",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "MaruBdaySprite1",
	"Value": "faceDirection Sebastian 3/faceDirection farmer 1",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "MaruBdaySprite1",
	"Value": "advancedMove farmer false -1 0 0 -1 2 100/pause 1000/positionOffset farmer 0 -40/showFrame farmer 68/advancedMove Sebastian false 0 -1 2 100/pause 1000/positionOffset Sebastian 0 -50/showFrame Sebastian 120/pause 1000/showFrame Sebastian 121/emote farmer 20/emote Sebastian 20/pause 500",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "MaruBdaySprite2",
	"Value": "faceDirection Sebastian 2/faceDirection farmer 2/pause 500",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "MaruBdaySprite2",
	"Value": "emote farmer 32/showFrame farmer 0/warp farmer 15 13/faceDirection farmer 2/advancedMove farmer false 0 1 1 0 2 100/pause 500/showFrame Sebastian 0/warp Sebastian 17 13/faceDirection Sebastian 2/move Sebastian 0 1 2/pause 1500",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
{
	"Name": "MaruBdaySprite3",
	"Value": "emote farmer 56 true/emote Sebastian 56",
	"When": {
		"SebCustomSprites": "no",
		}
	},
{
	"Name": "MaruBdaySprite3",
	"Value": "animate farmer false true 100 102 103/pause 1500/animate Sebastian false true 100 71 72/pause 1500/stopAnimation farmer 0/stopAnimation Sebastian 0",
	"When": {
		"Query: '{{HasMod |contains=maggplays.sebastiansprites,maggplays.SOspritespatchSeb}}' = 'true' OR '{{SebCustomSprites}}' = 'yes'": true,
		}
	},
//Dating and Marriage repeatable setup
{
	"Name": "SleepoverPosition",
	"Value": "makeInvisible 23 24/warp Sebastian 23 24/faceDirection Sebastian 3/warp farmer 22 24/faceDirection farmer 1/positionOffset farmer 0 15/viewport -100 -100 true unfreeze",
	},
{
	"Name": "SleepoverPosition",
	"Value": "makeInvisible 5 5/warp Sebastian 5 5/faceDirection Sebastian 3/warp farmer 4 5/faceDirection farmer 1/positionOffset farmer 0 15/viewport -100 -100 true unfreeze",
	"When": {
		"FarmhouseUpgrade": "1",
		}
	},
{
	"Name": "SleepoverPosition",
	"Value": "changeToTemporaryMap MaggSunsetScene false/warp Sebastian 20 12/faceDirection Sebastian 3/positionOffset Sebastian 0 -25/warp farmer 19 12/faceDirection farmer 1/positionOffset farmer 0 -10/viewport 19 12",
	"When": {
		"NightMap": "nightsky"
		}
	},
{
	"Name": "SleepoverPosition",
	"Value": "changeToTemporaryMap MaggSkyDance false/warp Sebastian 23 12/faceDirection Sebastian 3/warp farmer 22 12/faceDirection farmer 1/positionOffset farmer 0 15/viewport 22 12",
	"When": {
		"NightMap": "dream"
		}
	},
{
	"Name": "SleepoverPosition",
	"Value": "changeToTemporaryMap MaggBedScene false/warp Sebastian 23 13/faceDirection Sebastian 3/positionOffset Sebastian 0 -5/warp farmer 22 13/faceDirection farmer 1/positionOffset farmer 0 10/viewport 22 14",
	"When": {
		"NightMap": "bed"
		}
	},
{
	"Name": "MorningPosition",
	"Value": "makeInvisible 23 24/warp Sebastian 23 24/faceDirection Sebastian 3/warp farmer 22 24/faceDirection farmer 1/positionOffset farmer 0 15/viewport -100 -100 true unfreeze",
	},
{
	"Name": "MorningPosition",
	"Value": "makeInvisible 5 5/warp Sebastian 5 5/faceDirection Sebastian 3/warp farmer 4 5/faceDirection farmer 1/positionOffset farmer 0 15/viewport -100 -100 true unfreeze",
	"When": {
		"FarmhouseUpgrade": "1"
		}
	},
{
	"Name": "MorningPosition",
	"Value": "changeToTemporaryMap MaggSunsetScene false/warp Sebastian 20 12/faceDirection Sebastian 3/positionOffset Sebastian 0 -25/warp farmer 19 12/faceDirection farmer 1/positionOffset farmer 0 -10/viewport 19 12",
	"When": {
		"MorningMap": "nightsky"
		}
	},
{
	"Name": "MorningPosition",
	"Value": "changeToTemporaryMap MaggSkyDance false/warp Sebastian 23 12/faceDirection Sebastian 3/warp farmer 22 12/faceDirection farmer 1/positionOffset farmer 0 15/viewport 22 12",
	"When": {
		"MorningMap": "dream"
		}
	},
{
	"Name": "MorningPosition",
	"Value": "changeToTemporaryMap MaggBedScene false/warp Sebastian 23 13/faceDirection Sebastian 3/positionOffset Sebastian 0 0/warp farmer 22 13/faceDirection farmer 1/positionOffset farmer 0 15/viewport 22 14",
	"When": {
		"MorningMap": "bed"
		}
	},
{
	"Name": "SleepoverConditions",
	"Value": "f Sebastian 2250/e maggsebfirstsleepover10292024/A maggsleepoverrecurring/o Sebastian/t 600 605",
	"When": {
		"SleepoverRepeat": "daily"
		}
	},
{
	"Name": "SleepoverConditions",
	"Value": "f Sebastian 2250/e maggsebfirstsleepover10292024/A maggsleepoverrecurring/o Sebastian/d Tue Thu Fri Sun/t 600 605",
	"When": {
		"SleepoverRepeat": "threedays"
		}
	},
{
	"Name": "SleepoverConditions",
	"Value": "f Sebastian 2250/e maggsebfirstsleepover10292024/A maggsleepoverrecurring/o Sebastian/DayOfWeek Sat/t 600 605",
	"When": {
		"SleepoverRepeat": "friday"
		}
	},
{
	"Name": "SleepoverNightConditions",
	"Value": "f Sebastian 2250/e maggsebfirstsleepover10292024/A maggsleepoverrecurring/o Sebastian/t 2100 2400",
	"When": {
		"SleepoverRepeat": "daily"
		}
	},
{
	"Name": "SleepoverNightConditions",
	"Value": "f Sebastian 2250/e maggsebfirstsleepover10292024/A maggsleepoverrecurring/o Sebastian/d Mon Wed Thu Sat/t 2100 2400",
	"When": {
		"SleepoverRepeat": "threedays"
		}
	},
{
	"Name": "SleepoverNightConditions",
	"Value": "f Sebastian 2250/e maggsebfirstsleepover10292024/A maggsleepoverrecurring/o Sebastian/DayOfWeek Fri/t 2100 2400",
	"When": {
		"SleepoverRepeat": "friday"
		}
	},
{
	"Name": "PillowtalkConditions",
	"Value": "f Sebastian 2500/O Sebastian/t 2100 2400",
	"When": {
		"PillowtalkRepeat": "daily"
		}
	},
{
	"Name": "PillowtalkConditions",
	"Value": "f Sebastian 2500/O Sebastian/d Tue Thu Fri Sun/t 2100 2400",
	"When": {
		"PillowtalkRepeat": "threedays"
		}
	},
{
	"Name": "PillowtalkConditions",
	"Value": "f Sebastian 2500/O Sebastian/DayOfWeek Fri/t 2100 2400",
	"When": {
		"PillowtalkRepeat": "friday"
		}
	},
{
	"Name": "MorningConditions",
	"Value": "f Sebastian 2500/O Sebastian/t 600 605",
	"When": {
		"MorningRepeat": "daily"
		}
	},
{
	"Name": "MorningConditions",
	"Value": "f Sebastian 2500/O Sebastian/d Mon Wed Fri Sat/t 600 605",
	"When": {
		"MorningRepeat": "threedays"
		}
	},
{
	"Name": "MorningConditions",
	"Value": "f Sebastian 2500/O Sebastian/DayOfWeek Sat/t 600 605",
	"When": {
		"MorningRepeat": "saturday"
		}
	},
{
	"Name": "EndDay",
	"Value": "end",
	"When": {
		"EndDayOption": "no"
		}
	},
{
	"Name": "EndDay",
	"Value": "end newDay",
	"When": {
		"EndDayOption": "yes"
		}
	},
{
	"Name": "BabySpriteColor",
	"Value": "Baby",
	"When": {
		"BabySprite": "light"
		}
	},
{
	"Name": "BabySpriteColor",
	"Value": "Baby_dark",
	"When": {
		"BabySprite": "dark"
		}
	},
//Dates days and seasons
{
	"Name": "OverlookDays",
	"Value": "Season spring/u 5 6 7",
	"When": {
		"Season": "spring"
		}
	},
{
	"Name": "OverlookDays",
	"Value": "Season summer/u 8 9 15",
	"When": {
		"Season": "summer"
		}
	},
{
	"Name": "OverlookDays",
	"Value": "!Season fall",
	"When": {
		"Season": "fall"
		}
	},
{
	"Name": "OverlookDays",
	"Value": "!Season winter",
	"When": {
		"Season": "winter"
		}
	},
{
	"Name": "MineDays",
	"Value": "!Season spring",
	"When": {
		"Season": "spring"
		}
	},
{
	"Name": "MineDays",
	"Value": "Season summer/u 23 24 25 26",
	"When": {
		"Season": "summer"
		}
	},
{
	"Name": "MineDays",
	"Value": "!Season fall",
	"When": {
		"Season": "fall"
		}
	},
{
	"Name": "MineDays",
	"Value": "Season winter/u 18 19 20",
	"When": {
		"Season": "winter"
		}
	},
{
	"Name": "PoolDays",
	"Value": "Season spring/u 21 22",
	"When": {
		"Season": "spring"
		}
	},
{
	"Name": "PoolDays",
	"Value": "!Season summer",
	"When": {
		"Season": "summer"
		}
	},
{
	"Name": "PoolDays",
	"Value": "Season fall/u 22 23 24",
	"When": {
		"Season": "fall"
		}
	},
{
	"Name": "PoolDays",
	"Value": "Season winter/u 5 6 7",
	"When": {
		"Season": "winter"
		}
	},
{
	"Name": "CampoutDays",
	"Value": "Season spring/u 12 19 20",
	"When": {
		"Season": "spring"
		}
	},
{
	"Name": "CampoutDays",
	"Value": "!Season summer",
	"When": {
		"Season": "summer"
		}
	},
{
	"Name": "CampoutDays",
	"Value": "Season fall/u 13 14 18",
	"When": {
		"Season": "fall"
		}
	},
{
	"Name": "CampoutDays",
	"Value": "!Season winter",
	"When": {
		"Season": "winter"
		}
	},
{
	"Name": "FrogDays",
	"Value": "!Season spring",
	"When": {
		"Season": "spring"
		}
	},
{
	"Name": "FrogDays",
	"Value": "Season summer/u 5 6 7",
	"When": {
		"Season": "summer"
		}
	},
{
	"Name": "FrogDays",
	"Value": "Season fall/u 5 6 7",
	"When": {
		"Season": "fall"
		}
	},
{
	"Name": "FrogDays",
	"Value": "!Season winter",
	"When": {
		"Season": "winter"
		}
	},
],
"Changes": [
//MAPS
{
	"Action": "Load",
	"Target": "Maps/MaggSebSong, Maps/MaggMaruSecretLab, Maps/MaggMaruSecretLab2, Maps/MaggSaloonSong2, Maps/MaggSaloonWedding2, Maps/MaggSebRoomBlanket, Maps/MaggPicnicBeach2, Maps/MaggSkyDance, Maps/MaggTownSmallTable2, Maps/MaggWaterfallDate, Maps/MaggSecretGlade, Maps/MaggSaloonBand2, Maps/MaggMineDate, Maps/MaggMineDate2, Maps/MaggMountainEdit, Maps/MaggIslandFrogs, Maps/MaggIslandFrogs2, Maps/MaggWaterOnly, Maps/MaggWaterfallPool, Maps/MaggBedScene, Maps/MaggSunsetScene, Maps/MaggHospitalBirth",
	"FromFile": "assets/maps/{{TargetWithoutPath}}.tmx",
	},
{
	"Action": "Load",
	"Target": "Maps/MaggsSpriteTiles",
	"FromFile": "assets/maps/MaggsSpriteTiles.png",
	},
{
	"LogName": "Add Smirking Frog",
	"Action": "EditMap",
	"Target": "Maps/Mountain",
	"FromFile": "assets/maps/MaggMountainEdit.tmx",
	"FromArea": { "X": 68, "Y": 18, "Width": 2, "Height": 2 },
	"ToArea": { "X": 68, "Y": 18, "Width": 2, "Height": 2 },
	"PatchMode": "Replace",
	},
{
	"LogName": "Add Smirking Frog tile action",
	"Action": "EditMap",
	"Target": "Maps/Mountain",
	"MapTiles": [
		{
			"Position": { "X": 68, "Y": 19 },
			"Layer": "Buildings",
			"SetProperties": { "Action": "Message MountainFrog" }

			},
		{
			"Position": { "X": 69, "Y": 19 },
			"Layer": "Buildings",
			"SetProperties": { "Action": "Message MountainFrog" }
			},
		]
	},
{
	"LogName": "Remove Seb's room tile actions after marriage",
	"Action": "EditMap",
	"Target": "Maps/SebastianRoom",
	"When": {
		"Relationship:Sebastian": "Married"
		},
	"MapTiles": [
		{
			"Position": { "X": 3, "Y": 4 },
			"Layer": "Buildings",
			"SetProperties": { "Action": null }
			},
		{
			"Position": { "X": 8, "Y": 5 },
			"Layer": "Buildings",
			"SetProperties": { "Action": null }
			},
		{
			"Position": { "X": 10, "Y": 6 },
			"Layer": "Buildings",
			"SetProperties": { "Action": null }
			},
		{
			"Position": { "X": 11, "Y": 7 },
			"Layer": "Buildings",
			"SetProperties": { "Action": null }
			},
		{
			"Position": { "X": 3, "Y": 9 },
			"Layer": "Buildings",
			"SetProperties": { "Action": null }
			},
		]
	},
//DIALOGUE and EVENTS
{
	"LogName": "Dialogue and Events load",
	"Action": "Include",
	"FromFile": "code/dialogue/Sebastian_dialogue.json, code/dialogue/Robin_dialogue.json, code/dialogue/Demetrius_dialogue.json, code/dialogue/Others_dialogue.json, code/Sebastian_events.json, code/Sebastian_dates.json, code/Sebastian_sprite_loads.json"
	},
{
	"LogName": "Sam dialogue include",
	"Action": "Include",
	"FromFile": "code/dialogue/Sam_dialogue.json",
	"When": {
		"SamDialogue": true,
        }
	},
{
	"LogName": "Abigail dialogue include",
	"Action": "Include",
	"FromFile": "code/dialogue/Abigail_dialogue.json",
	"When": {
		"AbigailDialogue": true,
        }
	},
{
	"LogName": "Alex dialogue include",
	"Action": "Include",
	"FromFile": "code/dialogue/Alex_dialogue.json",
	"When": {
		"AlexDialogue": true,
        }
	},
{
	"LogName": "Maru dialogue include",
	"Action": "Include",
	"FromFile": "code/dialogue/Maru_dialogue.json",
	"When": {
		"MaruDialogue": true,
        }
	},
//SHOP ITEMS ADD
{
	"LogName":"Sebastian Decor",
	"Action": "Load",
	"Target": "Mods/{{ModId}}/Sebastian_Decor_small, Mods/{{ModId}}/Sebastian_Decor_med, Mods/{{ModId}}/Sebastian_Decor_large, Mods/{{ModId}}/Sebastian_Decor_xlarge, Mods/{{ModId}}/Sebastian_Decor_bed",
	"FromFile": "assets/sprites/{{TargetWithoutPath}}.png"
	},
{
	"LogName":"Sebastian Decor data",
	"Action": "EditData",
	"Target": "Data/Furniture",
	"Entries":
	{
		"{{ModId}}_FrogPJPicture": "{{ModId}}_FrogPJPicture/painting/1 2/1 2/1/500/-1/{{i18n:FrogPJPicture_name}}/2/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_med/false/Sebastian_decor",
		"{{ModId}}_FrogSlippers": "{{ModId}}_FrogSlippers/decor/1 1/1 1/4/750/0/{{i18n:FrogSlippers_name}}/1/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_small/false/Sebastian_decor",
		"{{ModId}}_FrogPoster": "{{ModId}}_FrogPoster/painting/1 2/1 2/1/500/-1/{{i18n:FrogPoster_name}}/3/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_med/false/Sebastian_decor",
		"{{ModId}}_SaltwaterTaffy": "{{ModId}}_SaltwaterTaffy/decor/1 1/1 1/1/500/0/{{i18n:SaltwaterTaffy_name}}/3/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_small/false/Sebastian_decor",
		"{{ModId}}_SmallFlowers": "{{ModId}}_SmallFlowers/decor/1 1/1 1/2/1000/2/{{i18n:SmallFlowers_name}}/4/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_small/false/Sebastian_decor",
		"{{ModId}}_EmoPumpkin": "{{ModId}}_EmoPumpkin/decor/1 1/1 1/2/1000/2/{{i18n:EmoPumpkin_name}}/5/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_small/false/Sebastian_decor",
		"{{ModId}}_BlueFrogs": "{{ModId}}_BlueFrogs/decor/1 1/1 1/2/100/2/{{i18n:BlueFrogs_name}}/6/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_small/false/Sebastian_decor",
		"{{ModId}}_TadpoleTank": "{{ModId}}_TadpoleTank/decor/1 2/1 2/2/2000/0/{{i18n:TadpoleTank_name}}/0/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_med/false/Sebastian_decor",
		"{{ModId}}_BlueFrogTank": "{{ModId}}_BlueFrogTank/decor/1 2/1 2/2/2000/0/{{i18n:BlueFrogTank_name}}/4/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_med/false/Sebastian_decor",
		"{{ModId}}_TallFlowers": "{{ModId}}_TallFlowers/decor/1 2/1 2/2/1200/2/{{i18n:TallFlowers_name}}/1/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_med/false/Sebastian_decor",
		"{{ModId}}_FlowerTable": "{{ModId}}_FlowerTable/table/2 2/2 2/2/1500/2/{{i18n:FlowerTable_name}}/0/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_large/false/Sebastian_decor",
		"{{ModId}}_SmirkingFrog": "{{ModId}}_SmirkingFrog/decor/2 2/2 2/1/5000/2/{{i18n:SmirkingFrog_name}}/2/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_large/false/Sebastian_decor",
		"{{ModId}}_SnowgoonFamily": "{{ModId}}_SnowgoonFamily/decor/4 2/4 2/1/2000/2/{{i18n:SnowgoonFamily_name}}/0/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_xlarge/false/Sebastian_decor",
		"{{ModId}}_PumpkinGang": "{{ModId}}_PumpkinGang/decor/4 2/4 2/1/2000/2/{{i18n:PumpkinGang_name}}/4/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_xlarge/false/Sebastian_decor",
		"{{ModId}}_FlowerBed": "{{ModId}}_FlowerBed/bed double/3 4/3 3/1/6000/-1/{{i18n:FlowerBed_name}}/0/Mods\\maggplays.immersivesebastian\\Sebastian_Decor_bed/false/Sebastian_decor",
		}
	},
{
	"LogName":"Sebastian Decor descriptions",
	"Action": "EditData",
	"Target": "spacechase0.SpaceCore/FurnitureExtensionData",
	"Entries":
	{
		"{{ModId}}_FrogPJPicture": {"DescriptionOverride": "{{i18n:FrogPJPicture_description}}"},
		"{{ModId}}_FrogSlippers": {"DescriptionOverride": "{{i18n:FrogSlippers_description}}"},
		"{{ModId}}_FrogPoster": {"DescriptionOverride": "{{i18n:FrogPoster_description}}"},
		"{{ModId}}_SaltwaterTaffy": {"DescriptionOverride": "{{i18n:SaltwaterTaffy_description}}"},
		"{{ModId}}_TadpoleTank": {"DescriptionOverride": "{{i18n:TadpoleTank_description}}"},
		"{{ModId}}_TallFlowers": {"DescriptionOverride": "{{i18n:TallFlowers_description}}"},
		"{{ModId}}_SmallFlowers": {"DescriptionOverride": "{{i18n:SmallFlowers_description}}"},
		"{{ModId}}_EmoPumpkin": {"DescriptionOverride": "{{i18n:EmoPumpkin_description}}"},
		"{{ModId}}_FlowerTable": {"DescriptionOverride": "{{i18n:FlowerTable_description}}"},
		"{{ModId}}_SmirkingFrog": {"DescriptionOverride": "{{i18n:SmirkingFrog_description}}"},
		"{{ModId}}_SnowgoonFamily": {"DescriptionOverride": "{{i18n:SnowgoonFamily_description}}"},
		"{{ModId}}_PumpkinGang": {"DescriptionOverride": "{{i18n:PumpkinGang_description}}"},
		"{{ModId}}_FlowerBed": {"DescriptionOverride": "{{i18n:FlowerBed_description}}"},
		"{{ModId}}_BlueFrogTank": {"DescriptionOverride": "{{i18n:BlueFrogTank_description}}"},
		"{{ModId}}_BlueFrogs": {"DescriptionOverride": "{{i18n:BlueFrogs_description}}"},
		}
	},
{
	"LogName": "Sebastian Decor Shop Edit",
	"Action": "EditData",
	"Target": "Data/Shops",
	"When": {
		"Relationship:Sebastian |contains=Married": true, },
	"TargetField":
		[
		"Traveler",
		"Items"
			],
	"Entries":
		{
		"{{ModID}}_Sebastian_decor":
		{
		"Id": "{{ModID}}_Sebastian_decor",
		"RandomItemId":
			[
			"(F){{ModID}}_FrogPJPicture",
			"(F){{ModID}}_FrogSlippers",
			"(F){{ModID}}_FrogPoster",
			"(F){{ModID}}_SaltwaterTaffy",
			"(F){{ModID}}_TadpoleTank",
			"(F){{ModID}}_TallFlowers",
			"(F){{ModID}}_SmallFlowers",
			"(F){{ModID}}_EmoPumpkin",
			"(F){{ModID}}_FlowerTable",
			"(F){{ModID}}_SmirkingFrog",
			"(F){{ModID}}_SnowgoonFamily",
			"(F){{ModID}}_PumpkinGang",
			"(F){{ModID}}_FlowerBed",
			"(F){{ModID}}_BlueFrogTank",
			"(F){{ModID}}_BlueFrogs",
				]
			}
		}
	},
//EVENT CLEARS
	//annual
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_RepeatableEvents": {
			"Id": "{{ModId}}_RepeatableEvents",
			"Trigger": "DayEnding",
			"Condition": "SEASON_DAY winter 28",
			"HostOnly": false,
			"Actions": [
				"MarkEventSeen Current maggarmwrestle10282024 false",
				"MarkEventSeen Current magghangoutdating10042024 false",
				"MarkEventSeen Current maggskydance10092024 false",
				"MarkEventSeen Current maggmountainmusic110042024 false",
				"MarkEventSeen Current maggmountainmusic210042024 false",
				"MarkEventSeen Current MaggSteamRising06162024 false",
				"MarkEventSeen Current MaggTimeMachine06162024 false",
                    ],
			"MarkActionApplied": false
                }
            },
	"When": {
		"RepeatableEvents": "Yes"
		}
	},
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_AnnualDateRepeat": {
			"Id": "{{ModId}}_AnnualDateRepeat",
			"Trigger": "DayEnding",
			"Condition": "SEASON_DAY winter 28",
			"HostOnly": false,
			"Actions": [
				"MarkEventSeen Current maggminedateinvite11072024 false",
				"MarkEventSeen Current maggminedate11072024 false",
				"MarkEventSeen Current maggmechanicdateinvite11072024 false",
				"MarkEventSeen Current maggmechanicdate11072024 false",
				"MarkEventSeen Current maggpooldateinvite11072024 false",
				"MarkEventSeen Current maggpooldate11072024 false",
				"MarkEventSeen Current maggislandfrogdateinvite11072024 false",
				"MarkEventSeen Current maggislandfrogdate11072024 false",
				"MarkEventSeen Current maggoverlookdateinvite11072024 false",
				"MarkEventSeen Current maggoverlookdate11072024 false",
				"MarkEventSeen Current maggpumpkindateinvite11072024 false",
				"MarkEventSeen Current maggpumpkindate11072024 false",
				"MarkEventSeen Current maggsnowgoonsdateinvite11072024 false",
				"MarkEventSeen Current maggsnowgoonsdate11072024 false",
				"MarkEventSeen Current maggswimmingdate11072024 false",
                    ],
			"MarkActionApplied": false
                }
            },
	"When": {
		"DateRepeat": "annually"
		}
	},
	//seasonally
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_SpringDateRepeat": {
			"Id": "{{ModId}}_SpringDateRepeat",
			"Trigger": "DayEnding",
			"Condition": "SEASON_DAY spring 28",
			"HostOnly": false,
			"Actions": [
				"MarkEventSeen Current maggcampoutdateinvite11072024 false",
				"MarkEventSeen Current maggcampoutdate11072024 false",
				"MarkEventSeen Current maggmechanicdateinvite11072024 false",
				"MarkEventSeen Current maggmechanicdate11072024 false",
				"MarkEventSeen Current maggpooldateinvite11072024 false",
				"MarkEventSeen Current maggpooldate11072024 false",
				"MarkEventSeen Current maggoverlookdateinvite11072024 false",
				"MarkEventSeen Current maggoverlookdate11072024 false",
                    ],
			"MarkActionApplied": false
                }
            },
	"When": {
		"DateRepeat": "monthly"
		}
	},
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_SummerDateRepeat": {
			"Id": "{{ModId}}_SummerDateRepeat",
			"Trigger": "DayEnding",
			"Condition": "SEASON_DAY summer 28",
			"HostOnly": false,
			"Actions": [
				"MarkEventSeen Current maggminedateinvite11072024 false",
				"MarkEventSeen Current maggminedate11072024 false",
				"MarkEventSeen Current maggislandfrogdateinvite11072024 false",
				"MarkEventSeen Current maggislandfrogdate11072024 false",
				"MarkEventSeen Current maggoverlookdateinvite11072024 false",
				"MarkEventSeen Current maggoverlookdate11072024 false",
				"MarkEventSeen Current maggswimmingdate11072024 false",
                    ],
			"MarkActionApplied": false
                }
            },
	"When": {
		"DateRepeat": "monthly"
		}
	},
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_FallDateRepeat": {
			"Id": "{{ModId}}_FallDateRepeat",
			"Trigger": "DayEnding",
			"Condition": "SEASON_DAY fall 28",
			"HostOnly": false,
			"Actions": [
				"MarkEventSeen Current maggpooldateinvite11072024 false",
				"MarkEventSeen Current maggpooldate11072024 false",
				"MarkEventSeen Current maggislandfrogdateinvite11072024 false",
				"MarkEventSeen Current maggislandfrogdate11072024 false",
				"MarkEventSeen Current maggpumpkindateinvite11072024 false",
				"MarkEventSeen Current maggpumpkindate11072024 false",
				"MarkEventSeen Current maggcampoutdateinvite11072024 false",
				"MarkEventSeen Current maggcampoutdate11072024 false",
                    ],
			"MarkActionApplied": false
                }
            },
	"When": {
		"DateRepeat": "monthly"
		}
	},
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_WinterDateRepeat": {
			"Id": "{{ModId}}_WinterDateRepeat",
			"Trigger": "DayEnding",
			"Condition": "SEASON_DAY winter 28",
			"HostOnly": false,
			"Actions": [
				"MarkEventSeen Current maggpooldateinvite11072024 false",
				"MarkEventSeen Current maggpooldate11072024 false",
				"MarkEventSeen Current maggminedateinvite11072024 false",
				"MarkEventSeen Current maggminedate11072024 false",
				"MarkEventSeen Current maggsnowgoonsdateinvite11072024 false",
				"MarkEventSeen Current maggsnowgoonsdate11072024 false",
                    ],
			"MarkActionApplied": false
                }
            },
	"When": {
		"DateRepeat": "monthly"
		}
	},
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_OverlookMailReset": {
			"Id": "{{ModId}}_OverlookMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current overlookdateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current overlookdateaccept",
			"MarkActionApplied": false
			},
		"{{ModId}}_MineMailReset": {
			"Id": "{{ModId}}_MineMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current minedateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current minedateaccept",
			"MarkActionApplied": false
			},
		"{{ModId}}_MechanicMailReset": {
			"Id": "{{ModId}}_MechanicMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current mechanicdateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current mechanicdateaccept",
			"MarkActionApplied": false
			},
		"{{ModId}}_PoolMailReset": {
			"Id": "{{ModId}}_PoolMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current pooldateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current pooldateaccept",
			"MarkActionApplied": false
			},
		"{{ModId}}_FrogHuntMailReset": {
			"Id": "{{ModId}}_FrogHuntMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current froghuntdateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current froghuntdateaccept",
			"MarkActionApplied": false
			},
		"{{ModId}}_CampoutMailReset": {
			"Id": "{{ModId}}_CampoutMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current campoutdateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current campoutdateaccept",
			"MarkActionApplied": false
			},
		"{{ModId}}_PumpkinMailReset": {
			"Id": "{{ModId}}_PumpkinMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current pumpkindateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current pumpkindateaccept",
			"MarkActionApplied": false
			},
		"{{ModId}}_SnowgoonMailReset": {
			"Id": "{{ModId}}_SnowgoonMailReset",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_MAIL Current snowgoonsdateaccept",
			"HostOnly": false,
			"Action": "RemoveMail Current snowgoonsdateaccept",
			"MarkActionApplied": false
			},
		}
	},
	//daily
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_SleepoverRepeat": {
			"Id": "{{ModId}}_SleepoverRepeat",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current maggsebsleepover10292024",
			"Actions": [
				"MarkEventSeen Current maggsebsleepover10292024 false",
				"MarkActionApplied Current {{ModId}}_EventClear1 false",
                    ]
                },
		"{{ModId}}_EventClear1": {
			"Id": "{{ModId}}_EventClear1",
			"Trigger": "DayEnding",
			"Actions": [
				"MarkActionApplied Current {{ModId}}_SleepoverRepeat false",
                    ]
			}
		}
	},
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_PillowtalkRepeat": {
			"Id": "{{ModId}}_PillowtalkRepeat",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current maggsebpillowtalk10292024",
			"Actions": [
				"MarkEventSeen Current maggsebpillowtalk10292024 false",
				"MarkActionApplied Current {{ModId}}_EventClear3 false",
                    ]
                },
		"{{ModId}}_EventClear3": {
			"Id": "{{ModId}}_EventClear3",
			"Trigger": "DayEnding",
			"Actions": [
				"MarkActionApplied Current {{ModId}}_PillowtalkRepeat false",
                    ]
             }
		}
	},
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_MorningRepeat": {
			"Id": "{{ModId}}_MorningRepeat",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current maggsebmorning10292024",
			"Actions": [
				"MarkEventSeen Current maggsebmorning10292024 false",
				"MarkActionApplied Current {{ModId}}_EventClear4 false",
                    ]
                },
		"{{ModId}}_EventClear4": {
			"Id": "{{ModId}}_EventClear4",
			"Trigger": "DayEnding",
			"Actions": [
				"MarkActionApplied Current {{ModId}}_MorningRepeat false",
                    ]
			}
		}
	},
//MAIL
{
	"Action": "EditData",
	"Target": "Data/TriggerActions",
	"Entries": {
		"{{ModId}}_MaggSebastianMail1": {
			"Id": "{{ModId}}_MaggSebastianMail1",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current maggharmony10292024, !PLAYER_NPC_RELATIONSHIP Current Sebastian Married",
			"Actions": [
				"AddMail Current MaggSebastianMail1 tomorrow"
                    ]
                },
		"{{ModId}}_MaggSebastianMail2": {
			"Id": "{{ModId}}_MaggSebastianMail2",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current maggmusketeers08242024, !PLAYER_NPC_RELATIONSHIP Current Sebastian Married",
			"Actions": [
				"AddMail Current MaggSebastianMail2 tomorrow"
                    ]
				},
		"{{ModId}}_MaggSebastianMail3": {
			"Id": "{{ModId}}_MaggSebastianMail3",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current maggpassingthrough01052025, !PLAYER_NPC_RELATIONSHIP Current Sebastian Married",
			"Actions": [
				"AddMail Current MaggSebastianMail3 tomorrow"
                    ]
                },
        "{{ModId}}_MaggSebastianMail4": {
			"Id": "{{ModId}}_MaggSebastianMail4",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current MaggBones06162024, !PLAYER_NPC_RELATIONSHIP Current Sebastian Married",
			"Actions": [
				"AddMail Current MaggSebastianMail4 tomorrow"
                    ]
				},
		"{{ModId}}_MaggSebastianMail5": {
			"Id": "{{ModId}}_MaggSebastianMail5",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current maggfrogsofblue610162024, !PLAYER_NPC_RELATIONSHIP Current Sebastian Married",
			"Actions": [
				"AddMail Current MaggSebastianMail5 tomorrow"
                    ]
				},
		"{{ModId}}_MaggSebastianMail6": {
			"Id": "{{ModId}}_MaggSebastianMail6",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_FRIENDSHIP_POINTS Current Sebastian 2250, PLAYER_NPC_RELATIONSHIP Current Sebastian Dating",
			"Actions": [
				"AddMail Current MaggSebastianMail6 tomorrow"
                    ]
				},
		"{{ModId}}_MaggSebastianMail7": {
			"Id": "{{ModId}}_MaggSebastianMail7",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current MaggThunder07252024, PLAYER_NPC_RELATIONSHIP Current Sebastian Dating",
			"Actions": [
				"AddMail Current MaggSebastianMail7 tomorrow"
                    ]
				},
		"{{ModId}}_MaggFollowYouMail": {
			"Id": "{{ModId}}_MaggFollowYouMail",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_HAS_SEEN_EVENT Current MaggDebugging206292024, PLAYER_NPC_RELATIONSHIP Current Sebastian Dating",
			"Actions": [
				"AddMail Current MaggFollowYouMail tomorrow"
                    ]
				},
		"{{ModId}}MaggSebEngagedMail": {
			"Id": "{{ModId}}MaggSebEngagedMail",
			"Trigger": "DayEnding",
			"Condition": "PLAYER_NPC_RELATIONSHIP Current Sebastian Engaged",
			"Actions": [
				"AddMail Current MaggSebEngagedMail tomorrow"
                    ]
                }
            },
        }
]
}
